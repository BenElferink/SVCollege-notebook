{"version":3,"sources":["components/Users.jsx","components/Result.jsx","components/Game.jsx","App.js","index.js"],"names":["Users","users","addNew","select","useState","username","setUsername","className","style","textAlign","map","user","onClick","played","wins","losses","id","colSpan","type","placeholder","value","onChange","e","target","isOkay","forEach","newUser","length","window","alert","Result","computerWins","playerWins","playAgain","quitGame","Game","player","setPlayer","allCards","computerCards","setComputerCards","playerCards","setPlayerCards","setComputerWins","setPlayerWins","finish","setFinish","useEffect","copyAllCards","copyComputerCards","copyPlayerCards","randomIndex","Math","floor","random","randomCard","push","splice","copyPlayer","remaining","shift","App","key","storage","JSON","parse","localStorage","getItem","checkLocalStorage","setUsers","setItem","stringify","copyUsers","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eccd3cd.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function Users({ users, addNew, select }) {\n  const [username, setUsername] = useState('');\n\n  // this function verifies that the user has given an input,\n  // and checks if given input doesn't already exist\n  // only if both conditions are met, the new user will be created\n  const createNewUser = () => {\n    if (username !== '') {\n      let isOkay = true;\n      users.forEach((user) => {\n        if (user.username === username) {\n          isOkay = false;\n        }\n      });\n\n      if (isOkay) {\n        let newUser = {\n          id: users.length + 1,\n          username: username,\n          played: 0,\n          wins: 0,\n          losses: 0,\n        };\n        addNew(newUser);\n        select(newUser);\n        setUsername('');\n      } else {\n        window.alert('That name already exists!');\n      }\n    } else {\n      window.alert('Please insert a username...');\n    }\n  };\n\n  return (\n    <div className='users'>\n      <h1>This is Milhama!</h1>\n\n      <table>\n        <thead>\n          <tr>\n            <th style={{ textAlign: 'left' }}>Select a user:</th>\n            <th className='border'>played</th>\n            <th className='border'>won</th>\n            <th className='border'>lost</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user) => (\n            <tr key={user.id}>\n              <td\n                className='uname'\n                onClick={() => {\n                  select(user);\n                }}>\n                {user.username}\n              </td>\n              <td className='border'>{user.played} time(s)</td>\n              <td className='border'>{user.wins} time(s)</td>\n              <td className='border'>{user.losses} time(s)</td>\n            </tr>\n          ))}\n          <tr>\n            <td colSpan='4' className='inp-group'>\n              <input\n                type='text'\n                placeholder='Create a new user'\n                value={username}\n                onChange={(e) => {\n                  setUsername(e.target.value);\n                }}\n              />\n              <button onClick={createNewUser}>Create</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Result({\n  computerWins,\n  playerWins,\n  playAgain,\n  quitGame,\n}) {\n  return (\n    <div className='result'>\n      <p>\n        {computerWins > playerWins\n          ? 'You lose...'\n          : playerWins > computerWins\n          ? 'You win!'\n          : \"It's a tie...\"}\n        <br />\n        {playerWins} - {computerWins}\n      </p>\n      <div className='col'>\n        <button onClick={playAgain}>Play Again</button>\n        <button onClick={quitGame}>Change User</button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Result from './Result';\n\nexport default function Game({ player, setPlayer, quitGame }) {\n  // prettier-ignore\n  const allCards = [1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13]\n  const [computerCards, setComputerCards] = useState(['Milhama']);\n  const [playerCards, setPlayerCards] = useState(['Milhama']);\n  const [computerWins, setComputerWins] = useState(0);\n  const [playerWins, setPlayerWins] = useState(0);\n  const [finish, setFinish] = useState(false);\n\n  // this side effect shuffles & deals all cards each time the 'player' is set.\n  // 'player' is set when selecting or creating a player in 'Users.jsx',\n  // or by finishing the game (another side effect, see below - line 42)\n  useEffect(() => {\n    // first we copy/create all necessary card arrays\n    let copyAllCards = [...allCards];\n    let copyComputerCards = ['Milhama'];\n    let copyPlayerCards = ['Milhama'];\n    // then we loop through all cards until none are left\n    while (copyAllCards.length !== 0) {\n      // randomly selecting a card, and pushing it to computer\n      let randomIndex = Math.floor(Math.random() * copyAllCards.length);\n      let randomCard = copyAllCards[randomIndex];\n      copyComputerCards.push(randomCard);\n      copyAllCards.splice(randomIndex, 1);\n      // randomly selecting a card, and pushing it to player\n      randomIndex = Math.floor(Math.random() * copyAllCards.length);\n      randomCard = copyAllCards[randomIndex];\n      copyPlayerCards.push(randomCard);\n      copyAllCards.splice(randomIndex, 1);\n    }\n    // then we save 2 out of 3 manipulated arrays\n    setComputerCards(copyComputerCards);\n    setPlayerCards(copyPlayerCards);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [player]);\n\n  // this side effect checks which side has the higher card and keeps track of them,\n  // unless there are no cards left, thn this will toggle 'finish' to 'true'\n  useEffect(() => {\n    if (computerCards[0] > playerCards[0]) {\n      setComputerWins(computerWins + 1);\n    } else if (playerCards[0] > computerCards[0]) {\n      setPlayerWins(playerWins + 1);\n    } else if (computerCards.length + playerCards.length === 0) {\n      setFinish(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [computerCards, playerCards]);\n\n  // this side effect updates user data upon finishing the game,\n  // this will also trigger a re-shuffle for the next game (see line 16)\n  useEffect(() => {\n    if (finish) {\n      let copyPlayer = { ...player };\n      copyPlayer.played += 1;\n      if (computerWins > playerWins) {\n        copyPlayer.losses += 1;\n      } else if (playerWins > computerWins) {\n        copyPlayer.wins += 1;\n      }\n      setPlayer(copyPlayer);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [finish]);\n\n  // this function removes used cards from both decks\n  const clickNext = () => {\n    let copyComputerCards = [...computerCards];\n    let copyPlayerCards = [...playerCards];\n    copyComputerCards.shift();\n    copyPlayerCards.shift();\n    setComputerCards(copyComputerCards);\n    setPlayerCards(copyPlayerCards);\n  };\n\n  const remaining = computerCards.length + playerCards.length - 2;\n  return finish ? (\n    <Result\n      computerWins={computerWins}\n      playerWins={playerWins}\n      playAgain={() => {\n        setFinish(false);\n        setComputerWins(0);\n        setPlayerWins(0);\n      }}\n      quitGame={quitGame}\n    />\n  ) : (\n    <div className='game'>\n      <div>\n        <div className='card'>\n          <span>{computerCards[0]}</span>\n        </div>\n        <p>Computer - {computerWins}</p>\n      </div>\n      VS.\n      <div>\n        <p>You - {playerWins}</p>\n        <div className='card'>\n          <span>{playerCards[0]}</span>\n        </div>\n      </div>\n      <div>\n        <button onClick={clickNext}>\n          {remaining === 0\n            ? 'Finish'\n            : computerCards[0] === 'Milhama'\n            ? 'Start'\n            : 'Next'}\n        </button>\n        <p className='remaining'>cards left: {remaining}</p>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Users from './components/Users';\nimport Game from './components/Game';\nimport './style/style.css';\n\nexport default function App() {\n  const [player, setPlayer] = useState({ id: 0 });\n  const [users, setUsers] = useState(\n    checkLocalStorage('Milhama_WebApp__dev_Ben_Elferink')\n  );\n\n  // this side effect keeps localStorage updated with each change to 'users'\n  useEffect(() => {\n    localStorage.setItem(\n      'Milhama_WebApp__dev_Ben_Elferink',\n      JSON.stringify(users)\n    );\n  }, [users]);\n\n  // this side effect updates 'users' with changes made to 'player'\n  useEffect(() => {\n    let copyUsers = [...users];\n    for (let i = 0; i < copyUsers.length; i++) {\n      if (copyUsers[i].id === player.id) {\n        copyUsers[i] = player;\n      }\n    }\n    setUsers(copyUsers);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [player]);\n\n  return (\n    <div className='app'>\n      {player.id === 0 ? (\n        <Users\n          users={users}\n          addNew={(user) => {\n            setUsers([...users, user]);\n          }}\n          select={(player) => {\n            setPlayer(player);\n          }}\n        />\n      ) : (\n        <Game\n          player={player}\n          setPlayer={setPlayer}\n          quitGame={() => {\n            setPlayer({ id: 0 });\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\n// this function will return existing storage,\n// if it doesn't exist, initialize first storage setup\nfunction checkLocalStorage(key) {\n  let storage = JSON.parse(localStorage.getItem(key));\n\n  if (storage == null) {\n    let played = Math.floor(Math.random() * (10 - 5) + 5);\n    let wins = Math.floor(Math.random() * (played - 1) + 1);\n    let losses = played - wins;\n\n    return [\n      {\n        id: 1,\n        username: 'AdminPwn',\n        played: played,\n        wins: wins,\n        losses: losses,\n      },\n    ];\n  } else {\n    return storage;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}