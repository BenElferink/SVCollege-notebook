{"version":3,"sources":["components/Exchange.jsx","components/Update.jsx","App.js","index.js"],"names":["Exchange","allCurrencies","exchangeHistory","setExchangeHistory","React","useState","inp","setInp","currencyFrom","setCurrencyFrom","currencyTo","setCurrencyTo","viewExchangeList","setViewExchangeList","value","onChange","e","target","map","currency","i","type","style","width","onClick","valueOfCurrencyFrom","valueOfCurrencyTo","forEach","res","window","alert","copyOfExchangeHistory","push","fromType","fromValue","toType","toValue","className","to","href","item","index","splice","removeItemFromHistory","Update","internalState","setAllCurrencies","inpType","setInpType","inpValue","setInpValue","disabled","cursor","copyOfInpType","toLowerCase","length","charAt","validateInpType","existIndex","typeExists","currentType","copyOfAllCurrencies","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1363ce40.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Exchange({ allCurrencies, exchangeHistory, setExchangeHistory }) {\n  const [inp, setInp] = React.useState(0);\n  const [currencyFrom, setCurrencyFrom] = React.useState('Shekel');\n  const [currencyTo, setCurrencyTo] = React.useState('US Dollar');\n  const [viewExchangeList, setViewExchangeList] = React.useState(false);\n\n  const doExchange = () => {\n    if (inp !== '') {\n      let valueOfCurrencyFrom, valueOfCurrencyTo;\n\n      allCurrencies.forEach((currency) => {\n        if (currency.type === currencyFrom) {\n          valueOfCurrencyFrom = currency.value;\n        } else if (currency.type === currencyTo) {\n          valueOfCurrencyTo = currency.value;\n        }\n      });\n\n      let exRate = valueOfCurrencyFrom / valueOfCurrencyTo;\n      let res = inp * exRate;\n      window.alert(`${inp} ${currencyFrom} = ${res} ${currencyTo}`);\n\n      let copyOfExchangeHistory = [...exchangeHistory];\n      copyOfExchangeHistory.push({\n        fromType: currencyFrom,\n        fromValue: inp,\n        toType: currencyTo,\n        toValue: res,\n      });\n      setExchangeHistory(copyOfExchangeHistory);\n    } else {\n      window.alert('Please insert a number to exchange');\n    }\n  };\n\n  const removeItemFromHistory = (index) => {\n    let copyOfExchangeHistory = [...exchangeHistory];\n    copyOfExchangeHistory.splice(index, 1);\n    setExchangeHistory(copyOfExchangeHistory);\n  };\n\n  return (\n    <div>\n      <h1>Exchange</h1>\n\n      <table>\n        <tbody>\n          <tr>\n            <td>From:</td>\n            <td>\n              <select\n                value={currencyFrom}\n                onChange={(e) => {\n                  setCurrencyFrom(e.target.value);\n                }}>\n                {allCurrencies.map((currency, i) => (\n                  <option key={i} value={currency.type}>\n                    {currency.type}\n                  </option>\n                ))}\n              </select>\n            </td>\n            <td>\n              <input\n                type='number'\n                value={inp}\n                onChange={(e) => {\n                  setInp(e.target.value);\n                }}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>To:</td>\n            <td>\n              <select\n                value={currencyTo}\n                onChange={(e) => {\n                  setCurrencyTo(e.target.value);\n                }}>\n                {allCurrencies.map((currency, i) => (\n                  <option key={i} value={currency.type}>\n                    {currency.type}\n                  </option>\n                ))}\n              </select>\n            </td>\n            <td />\n          </tr>\n          <tr>\n            <td />\n            <td />\n            <td>\n              <button style={{ width: '100%' }} onClick={doExchange}>\n                start\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className='controls'>\n        <Link to='/update'>\n          <button>Update</button>\n        </Link>\n        <button>\n          <a href='https://www.facebook.com' target='blank'>\n            Share on FACEBOOK\n          </a>\n        </button>\n        <button\n          onClick={() => {\n            setViewExchangeList(!viewExchangeList);\n          }}>\n          View your exchange list\n        </button>\n      </div>\n\n      {viewExchangeList && (\n        <div className='history-parent'>\n          {exchangeHistory.map((item, i) => (\n            <div key={i} className='history-child'>\n              <p>#{i + 1}</p>\n              <p>\n                from {item.fromType}, to {item.toType}\n              </p>\n              <p>\n                {item.fromValue} = {item.toValue}\n              </p>\n              <span\n                onClick={() => {\n                  removeItemFromHistory(i);\n                }}>\n                &times;\n              </span>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Exchange;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Update({ internalState }) {\n  const [allCurrencies, setAllCurrencies] = internalState;\n  const [inpType, setInpType] = React.useState('');\n  const [inpValue, setInpValue] = React.useState('');\n\n  const clickUpdate = () => {\n    let validateInpType = () => {\n      let copyOfInpType = inpType;\n      copyOfInpType = copyOfInpType.toLowerCase();\n      for (let i = 0; i < copyOfInpType.length; i++) {\n        if ((copyOfInpType.charAt(i) >= 'a' && copyOfInpType.charAt(i) <= 'z') || copyOfInpType.charAt(i) === ' ') {\n          continue;\n        } else {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    if (validateInpType()) {\n      let typeExists = false,\n        existIndex;\n      let copyOfInpType = inpType;\n      copyOfInpType = copyOfInpType.toLowerCase();\n\n      allCurrencies.forEach((item, i) => {\n        let currentType = item.type;\n        currentType = currentType.toLowerCase();\n        if (copyOfInpType === currentType) {\n          typeExists = true;\n          existIndex = i;\n        }\n      });\n\n      if (typeExists) {\n        let copyOfAllCurrencies = [...allCurrencies];\n        copyOfAllCurrencies[existIndex].value = inpValue;\n        setAllCurrencies(copyOfAllCurrencies);\n      } else {\n        let copyOfAllCurrencies = [...allCurrencies];\n        copyOfAllCurrencies.push({\n          type: inpType,\n          value: inpValue,\n        });\n        setAllCurrencies(copyOfAllCurrencies);\n      }\n    } else {\n      window.alert('Type must contain English letters!');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Update</h1>\n\n      <table>\n        <thead>\n          <tr>\n            <td>TYPE</td>\n            <td>VALUE</td>\n          </tr>\n        </thead>\n        <tbody>\n          {allCurrencies.map((item, i) => (\n            <tr key={i}>\n              <td>{item.type}</td>\n              <td>{item.value}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <table>\n        <tbody>\n          <tr>\n            <td>Type</td>\n            <td>\n              <input\n                type='text'\n                value={inpType}\n                onChange={(e) => {\n                  setInpType(e.target.value);\n                }}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>New value</td>\n            <td>\n              <input\n                type='number'\n                value={inpValue}\n                onChange={(e) => {\n                  setInpValue(e.target.value);\n                }}\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className='controls'>\n        <Link to='/'>\n          <button>Back</button>\n        </Link>\n        <button disabled={inpType !== '' && inpValue !== '' ? false : true} style={{ cursor: inpType !== '' && inpValue !== '' ? 'pointer' : 'not-allowed' }} onClick={clickUpdate}>\n          Update\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Update;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Exchange from './components/Exchange';\nimport Update from './components/Update';\nimport './style/style.css';\n\nfunction App() {\n  const [allCurrencies, setAllCurrencies] = useState([\n    { type: 'Shekel', value: 1 },\n    { type: 'US Dollar', value: 4 },\n    { type: 'Euro', value: 5 },\n  ]);\n  const [exchangeHistory, setExchangeHistory] = React.useState([]);\n\n  return (\n    <div className='App'>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={() => <Exchange allCurrencies={allCurrencies} exchangeHistory={exchangeHistory} setExchangeHistory={setExchangeHistory} />} />\n          <Route exact path='/update' component={() => <Update internalState={[allCurrencies, setAllCurrencies]} />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}